#include <iostream>
#include <string>
#include <map>

class Phonebook {
private:
    std::map<std::string, std::string> contacts;

public:
    void addContact(const std::string& name, const std::string& number) {
        contacts[name] = number;
    }

    void displayContacts() {
        std::cout << "Phonebook Contacts:" << std::endl;
        for (const auto& contact : contacts) {
            std::cout << contact.first << ": " << contact.second << std::endl;
        }
    }

    void searchContact(const std::string& name) {
        auto it = contacts.find(name);
        if (it != contacts.end()) {
            std::cout << "Contact found: " << it->first << ": " << it->second << std::endl;
        } else {
            std::cout << "Contact not found." << std::endl;
        }
    }

    void deleteContact(const std::string& name) {
        contacts.erase(name);
        std::cout << "Contact deleted." << std::endl;
    }
};

int main() {
    Phonebook phonebook;
    int choice;
    std::string name, number;

    do {
        std::cout << "Phonebook Application" << std::endl;
        std::cout << "1. Add Contact" << std::endl;
        std::cout << "2. Display Contacts" << std::endl;
        std::cout << "3. Search Contact" << std::endl;
        std::cout << "4. Delete Contact" << std::endl;
        std::cout << "5. Quit" << std::endl;
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                std::cout << "Enter name: ";
                std::cin >> name;
                std::cout << "Enter number: ";
                std::cin >> number;
                phonebook.addContact(name, number);
                break;
            case 2:
                phonebook.displayContacts();
                break;
            case 3:
                std::cout << "Enter name to search: ";
                std::cin >> name;
                phonebook.searchContact(name);
                break;
            case 4:
                std::cout << "Enter name to delete: ";
                std::cin >> name;
                phonebook.deleteContact(name);
                break;
            case 5:
                std::cout << "Exiting Phonebook." << std::endl;
                break;
            default:
                std::cout << "Invalid choice. Try again." << std::endl;
                break;
        }

    } while (choice != 5);

    return 0;
}
